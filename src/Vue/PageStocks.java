/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vue;

import Modele.Stocks;
import crud.StockCRUD;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Carmelle Adou
 */
public class PageStocks extends javax.swing.JFrame {
    private boolean afficherDesactives = false;
    private StockCRUD stockCRUD;
    private javax.swing.JFrame previousPage;
    private TableRowSorter<DefaultTableModel> rowSorter;
    
    
    /**
     * Creates new form PageStocks
     */
    public PageStocks(javax.swing.JFrame previousPage) {
        this.previousPage = previousPage;
        initComponents();
        this.stockCRUD = new StockCRUD();
        chargerStocks();
        rowSorter = new TableRowSorter<>((DefaultTableModel) jTable1.getModel());
        jTable1.setRowSorter(rowSorter);
        initListeners();
        
    }
    private void initListeners() {
        jBtnAdd.addActionListener(evt -> ajouterStock());
        jbtnUpdate.addActionListener(evt -> modifierStock());
        jbtnDelete.addActionListener(evt -> desactiverStock());
        jbtnQuitter.addActionListener(evt -> System.exit(0));
        jBtnretour.addActionListener(evt -> retournerPagePrecedente());
        jbtnsearch.addActionListener(evt -> rechercherStock());
        jBtnAfficherDesactives.addActionListener(evt -> ouvrirPageStocksDesactives());
    }
    private void retournerPagePrecedente() {
        if (previousPage != null) {
            previousPage.setVisible(true);
        }
        this.dispose();
    }
    
    private void ouvrirPageStocksDesactives() {
        new PageStocksDesactives(this, true).setVisible(true);
        chargerStocks(); // Recharge après fermeture de la fenêtre
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        jBtnAdd = new javax.swing.JButton();
        jbtnUpdate = new javax.swing.JButton();
        jbtnDelete = new javax.swing.JButton();
        jbtnQuitter = new javax.swing.JButton();
        button1 = new java.awt.Button();
        jBtnAfficherDesactives = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabelGestionClient = new javax.swing.JLabel();
        jBtnretour = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jbtnsearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel1.setBackground(new java.awt.Color(0, 51, 102));

        jBtnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/imgAdd.png"))); // NOI18N
        jBtnAdd.setText("Ajouter");

        jbtnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/imgmodif.png"))); // NOI18N
        jbtnUpdate.setText("Modifier");

        jbtnDelete.setText("Desactiver");

        jbtnQuitter.setText("Quitter");

        button1.setLabel("button1");

        jBtnAfficherDesactives.setText("Affichage");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jbtnQuitter))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtnAfficherDesactives)
                            .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jbtnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbtnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBtnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jBtnAdd)
                .addGap(30, 30, 30)
                .addComponent(jbtnUpdate)
                .addGap(27, 27, 27)
                .addComponent(jbtnDelete)
                .addGap(47, 47, 47)
                .addComponent(jBtnAfficherDesactives)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addComponent(jbtnQuitter)
                .addGap(15, 15, 15))
        );

        getContentPane().add(panel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 417));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nom", "Description", "Quantite", "Seuil"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, 610, 193));

        jLabelGestionClient.setBackground(new java.awt.Color(255, 255, 255));
        jLabelGestionClient.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabelGestionClient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/imgGestStock.png"))); // NOI18N
        jLabelGestionClient.setText("Gestion Stocks");
        getContentPane().add(jLabelGestionClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 16, 269, 67));

        jBtnretour.setText("Retour");
        getContentPane().add(jBtnretour, new org.netbeans.lib.awtextra.AbsoluteConstraints(642, 378, -1, -1));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 130, 230, 30));

        jbtnsearch.setText("search");
        getContentPane().add(jbtnsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(642, 131, -1, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void chargerStocks() {
        try {
            List<Stocks> listeStocks = stockCRUD.getAllStocks();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
            for (Stocks s : listeStocks) {
                model.addRow(new Object[] {
                    s.getIdStock(),
                    s.getNomArticle(),
                    s.getDescriptionArticle(),
                    s.getSeuilMin(), 
                    s.getQuantiteEnStock() 
                 
                });
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erreur lors du chargement des stocks : " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void rechercherStock() {
        String searchText = jTextField1.getText().trim();
        if (rowSorter == null) {
            return;
        }
        if (searchText.isEmpty()) {
            rowSorter.setRowFilter(null);
        } else {
            rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + searchText));
        }
    }
    
    private void ajouterStock() {
        new FormStock(this, true, null).setVisible(true);
        chargerStocks();
    }
    
    private void modifierStock() {
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un stock à modifier.");
            return;
        }
        
        try {
            int id = Integer.parseInt(jTable1.getValueAt(selectedRow, 0).toString());
            Stocks stock = stockCRUD.getStockById(id);
            
            if (stock != null) {
                new FormStock(this, true, stock).setVisible(true);
                chargerStocks();
            } else {
                JOptionPane.showMessageDialog(this, "Stock introuvable en base de données.", "Erreur", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erreur lors de la récupération du stock : " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void desactiverStock() {
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un stock à désactiver.");
            return;
        }
        
        try {
            int id = Integer.parseInt(jTable1.getValueAt(selectedRow, 0).toString());
            int confirm = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment désactiver ce stock ?", "Confirmation", JOptionPane.YES_NO_OPTION);
            
            if (confirm == JOptionPane.YES_OPTION) {
                boolean success = stockCRUD.desactiverStock(id);
                
                if (success) {
                    JOptionPane.showMessageDialog(this, "Stock désactivé avec succès !");
                    chargerStocks();
                } else {
                    JOptionPane.showMessageDialog(this, "Erreur : impossible de désactiver ce stock.", "Erreur", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erreur lors de la désactivation du stock : " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PageStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PageStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PageStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PageStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PageStocks(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private javax.swing.JButton jBtnAdd;
    private javax.swing.JButton jBtnAfficherDesactives;
    private javax.swing.JButton jBtnretour;
    private javax.swing.JLabel jLabelGestionClient;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton jbtnDelete;
    private javax.swing.JButton jbtnQuitter;
    private javax.swing.JButton jbtnUpdate;
    private javax.swing.JButton jbtnsearch;
    private java.awt.Panel panel1;
    // End of variables declaration//GEN-END:variables
}
