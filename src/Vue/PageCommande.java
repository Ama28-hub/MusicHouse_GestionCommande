/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vue;

import Modele.Commande;
import Modele.Data;
import crud.CommandeCRUD;
import javax.swing.*;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Carmelle Adou
 */
public class PageCommande extends javax.swing.JFrame {
    private CommandeCRUD commandeCRUD;
    private DefaultTableModel tableModel;
    
    /**
     * Creates new form PageStocks
     */
    public PageCommande() {
        setTitle("Gestion des Commandes");
        initComponents();
        commandeCRUD = new CommandeCRUD();

        tableModel = new DefaultTableModel(new Object[]{"ID", "ID_Client", "Nom_Client", "Date", "Etat", "Total"}, 0);
        jTable_Commande.setModel(tableModel);
        //chargerToutesLesCommandes();
        chargerCommandes();

    }
    
    private void chargerToutesLesCommandes() {
        tableModel.setRowCount(0);
        try {
            List<Commande> commandes = commandeCRUD.getAllCommandes();
            for (Commande c : commandes) {
                tableModel.addRow(new Object[]{c.getIdCommande(), c.getIdClient(), c.getNomClient(), c.getDateCommande(), c.getEtat(), c.getTotal()});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erreur lors du chargement des commandes : " + e.getMessage());
        }
    }

    private void chargerCommandesRecherche(String recherche) {
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(tableModel);
        jTable_Commande.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter(recherche));
    }
    
    private void chargerCommandes() {
        DefaultTableModel model = (DefaultTableModel) jTable_Commande.getModel();
        model.setRowCount(0); // ✅ Vider la table avant de charger

        String sql = "SELECT c.id_commande, c.id_client, cl.nom AS Nom_Client, c.date_commande, c.etat, " +
                     "(SELECT SUM(co.Qte * co.prix_initial) FROM Contient co WHERE co.id_commande = c.id_commande) AS total " +
                     "FROM Commande c " +
                     "JOIN Client cl ON c.id_client = cl.id_client";

        try (Connection conn = Data.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(sql);
             ResultSet rs = pstmt.executeQuery()) {

            while (rs.next()) {
                int idCommande = rs.getInt("id_commande");
                int idClient = rs.getInt("id_client");
                String nomClient = rs.getString("Nom_Client");
                String dateCommande = rs.getString("date_commande");
                String etat = rs.getString("etat");
                double total = rs.getDouble("total");

                model.addRow(new Object[]{idCommande, idClient, nomClient, dateCommande, etat, total});
            }

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "❌ Erreur lors du chargement des commandes : " + ex.getMessage());
        }
    }


    /**
     * Prépare la JTable (modèle et rowSorter).
     */
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        jBtn_Quitter = new javax.swing.JButton();
        jBtn_RetourVente = new javax.swing.JButton();
        jLabelGestionClient = new javax.swing.JLabel();
        jbtnsearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Commande = new javax.swing.JTable();
        jTextF_Recherche = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel1.setBackground(new java.awt.Color(0, 51, 102));
        panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jBtn_Quitter.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBtn_Quitter.setText("Quitter");
        jBtn_Quitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_QuitterActionPerformed(evt);
            }
        });
        panel1.add(jBtn_Quitter, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 100, 30));

        jBtn_RetourVente.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jBtn_RetourVente.setText("Consulter");
        jBtn_RetourVente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_RetourVenteActionPerformed(evt);
            }
        });
        panel1.add(jBtn_RetourVente, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        getContentPane().add(panel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 160, 450));

        jLabelGestionClient.setBackground(new java.awt.Color(255, 255, 255));
        jLabelGestionClient.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabelGestionClient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/imgGestCom.png"))); // NOI18N
        jLabelGestionClient.setText("Gestion Commande");
        getContentPane().add(jLabelGestionClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 16, 333, 67));

        jbtnsearch.setText("search");
        getContentPane().add(jbtnsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 150, -1, 30));

        jTable_Commande.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "ID_Client", "Nom_Client", "Date", "Etat", "Total"
            }
        ));
        jTable_Commande.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_CommandeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Commande);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 640, 170));

        jTextF_Recherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextF_RechercheActionPerformed(evt);
            }
        });
        getContentPane().add(jTextF_Recherche, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 150, 190, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtn_QuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_QuitterActionPerformed
        // TODO add your handling code here:
        this.dispose(); // Ferme la fenêtre
    }//GEN-LAST:event_jBtn_QuitterActionPerformed

    private void jTable_CommandeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_CommandeMouseClicked

    }//GEN-LAST:event_jTable_CommandeMouseClicked

    private void jTextF_RechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextF_RechercheActionPerformed

    }//GEN-LAST:event_jTextF_RechercheActionPerformed

    private void jBtn_RetourVenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_RetourVenteActionPerformed
        // 1️⃣ Vérifier qu’une ligne est sélectionnée dans la jTable_Commande
        int row = jTable_Commande.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Sélectionnez une commande.", "Erreur", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // 2️⃣ Récupérer l'état de la commande (supposé dans la colonne 4)
        String etat = jTable_Commande.getValueAt(row, 4).toString(); // ✅ Remplacer "statut" par "etat"
        if (!"En cours".equalsIgnoreCase(etat)) {
            JOptionPane.showMessageDialog(this, "La commande est clôturée.\nVous ne pouvez pas ajouter d'articles à une commande non en cours.", "Erreur", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // 3️⃣ Récupérer les informations nécessaires
        int idCommande = (int) jTable_Commande.getValueAt(row, 0); // Colonne ID Commande
        int idClient = (int) jTable_Commande.getValueAt(row, 1); // Colonne ID Client

        // 4️⃣ Ouvrir la fenêtre PageVente
        PageVente fenVente = null;
        try {
            fenVente = new PageVente();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PageCommande.class.getName()).log(Level.SEVERE, null, ex);
        }

        // 5️⃣ Charger la commande existante avec l'ID et les articles
        fenVente.chargerCommandeExistante(idCommande, idClient);

        // 6️⃣ Afficher la fenêtre Vente
        fenVente.setVisible(true);

        // 7️⃣ Optionnel : Fermer la fenêtre commandes pour éviter d'encombrer l'interface
        this.dispose();
    }//GEN-LAST:event_jBtn_RetourVenteActionPerformed
    
    
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PageStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PageStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PageStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PageStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PageStocks(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtn_Quitter;
    private javax.swing.JButton jBtn_RetourVente;
    private javax.swing.JLabel jLabelGestionClient;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Commande;
    private javax.swing.JTextField jTextF_Recherche;
    private javax.swing.JButton jbtnsearch;
    private java.awt.Panel panel1;
    // End of variables declaration//GEN-END:variables
}
