/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vue;

import Modele.Data;
import Modele.Employe;
import Modele.Users;
import crud.UsersCRUD;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import util.Chiffrement;
import java.sql.Connection;

/**
 *
 * @author Carmelle Adou
 */
public class PageConnexion extends javax.swing.JFrame {
    public static Users userActif; // Stocke l'utilisateur connecté
    /**
     * Creates new form PageConnexion
     */
    public PageConnexion() {
        initComponents();
        complementGUI();
    }
    private void complementGUI() {
       
        //Image       im = Toolkit.getDefaultToolkit().getImage("");
        
        //setIconImage(im);
        setTitle("Connexion");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelFenetreConnexion = new java.awt.Panel();
        jTxtUsername = new javax.swing.JTextField();
        jPasswordFieldMDP = new javax.swing.JPasswordField();
        jBtnLogin = new javax.swing.JButton();
        jCheckBoxRemerber = new javax.swing.JCheckBox();
        jLabConnexion = new javax.swing.JLabel();
        jLabelImageConnexion = new javax.swing.JLabel();
        jLabelfpw = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabelImgWelcome = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setSize(400,300);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelFenetreConnexion.setBackground(new java.awt.Color(255, 255, 255));
        panelFenetreConnexion.setForeground(new java.awt.Color(255, 255, 255));

        jTxtUsername.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTxtUsername.setText("Username");
        jTxtUsername.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(192, 192, 192), 1, true));
        jTxtUsername.setMargin(new java.awt.Insets(5, 5, 5, 5));

        jPasswordFieldMDP.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPasswordFieldMDP.setText("Password");
        jPasswordFieldMDP.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(192, 192, 192), 1, true));
        jPasswordFieldMDP.setMargin(new java.awt.Insets(5, 5, 5, 5));

        jBtnLogin.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jBtnLogin.setText("Login");
        jBtnLogin.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jBtnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLoginActionPerformed(evt);
            }
        });
        jBtnLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBtnLoginKeyPressed(evt);
            }
        });

        jCheckBoxRemerber.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBoxRemerber.setText("Remember me");

        jLabConnexion.setBackground(new java.awt.Color(255, 255, 255));
        jLabConnexion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabConnexion.setText("CONNEXION");

        jLabelImageConnexion.setBackground(new java.awt.Color(255, 255, 255));
        jLabelImageConnexion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/connexion.png"))); // NOI18N

        jLabelfpw.setBackground(new java.awt.Color(255, 255, 255));
        jLabelfpw.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelfpw.setText("Forgot your password?");

        javax.swing.GroupLayout panelFenetreConnexionLayout = new javax.swing.GroupLayout(panelFenetreConnexion);
        panelFenetreConnexion.setLayout(panelFenetreConnexionLayout);
        panelFenetreConnexionLayout.setHorizontalGroup(
            panelFenetreConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFenetreConnexionLayout.createSequentialGroup()
                .addGroup(panelFenetreConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelFenetreConnexionLayout.createSequentialGroup()
                        .addGap(0, 44, Short.MAX_VALUE)
                        .addComponent(jCheckBoxRemerber)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelfpw))
                    .addGroup(panelFenetreConnexionLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelFenetreConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPasswordFieldMDP)
                            .addComponent(jTxtUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                        .addGap(27, 27, 27)))
                .addGap(33, 33, 33))
            .addGroup(panelFenetreConnexionLayout.createSequentialGroup()
                .addGroup(panelFenetreConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFenetreConnexionLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jBtnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelFenetreConnexionLayout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(jLabelImageConnexion))
                    .addGroup(panelFenetreConnexionLayout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jLabConnexion, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelFenetreConnexionLayout.setVerticalGroup(
            panelFenetreConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFenetreConnexionLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabConnexion)
                .addGap(28, 28, 28)
                .addComponent(jLabelImageConnexion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jTxtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPasswordFieldMDP, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jBtnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(panelFenetreConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxRemerber)
                    .addComponent(jLabelfpw))
                .addGap(47, 47, 47))
        );

        getContentPane().add(panelFenetreConnexion, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, -1, 350, 470));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setText("WELCOME");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 230, -1));

        jLabelImgWelcome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fondPanel2.png"))); // NOI18N
        getContentPane().add(jLabelImgWelcome, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 310, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLoginActionPerformed
        verifierConnexion();
    }//GEN-LAST:event_jBtnLoginActionPerformed

    private void jBtnLoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBtnLoginKeyPressed
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            verifierConnexion();
        }
        
    }//GEN-LAST:event_jBtnLoginKeyPressed
    
    //private Users user; // Déclaré en tant que variable globale de la classe

    private static final String DEFAULT_USERNAME = "adminApp";
    private static final String DEFAULT_PASSWORD = "admin153";

    private boolean verifierConnexionBD() {
        try {
            Connection conn = Data.getConnection();
            if (conn != null) {
                conn.close();
                return true; // Connexion réussie
            }
        } catch (Exception e) {
            return false; // Échec de connexion
        }
        return false;
    }

    private void verifierConnexion() {

        if (!verifierConnexionBD()) {
            JOptionPane.showMessageDialog(this, "Impossible de se connecter à la base de données.", "Erreur", JOptionPane.ERROR_MESSAGE);
            demanderConnexionLocale();
            return;
        }

        String email = jTxtUsername.getText().trim();
        String motDePasseSaisi = new String(jPasswordFieldMDP.getPassword()).trim();

        if (email.isEmpty() || motDePasseSaisi.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Veuillez entrer un email et un mot de passe.", "Erreur", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            UsersCRUD usersCRUD = new UsersCRUD();
            Users user = usersCRUD.getUserByEmail(email);

            if (user != null) {
                String storedPassword = user.getMotDePasse();
                //System.out.println("📌 Mot de passe récupéré depuis la base pour " + email + " : " + storedPassword);

                String decryptedPassword = storedPassword; // On suppose qu'il est en clair par défaut

                // Vérifier si le mot de passe est chiffré avec AES
                if (storedPassword.startsWith("ENC(") && storedPassword.endsWith(")")) {
                    try {
                        String encryptedPart = storedPassword.substring(4, storedPassword.length() - 1);
                        decryptedPassword = Chiffrement.dechiffrer(encryptedPart);

                        if (decryptedPassword != null) {
                            decryptedPassword = decryptedPassword.trim();
                        }

                        //System.out.println("🔓 Mot de passe déchiffré pour " + email + " : " + decryptedPassword);
                    } catch (Exception e) {
                        //System.err.println("❌ Erreur lors du déchiffrement du mot de passe : " + e.getMessage());
                        JOptionPane.showMessageDialog(this, "Erreur lors du déchiffrement du mot de passe.", "Erreur", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }

                // Comparaison stricte du mot de passe saisi avec celui déchiffré
                if (motDePasseSaisi.equals(decryptedPassword)) {
                    JOptionPane.showMessageDialog(this, "Connexion réussie, bienvenue " + user.getNom() + " !");
                    Users.startSession(user);

                    if ("admin".equalsIgnoreCase(user.getRole())) {
                        new PageAdmin(this).setVisible(true);
                    } else {
                        new PageEmploye(this).setVisible(true);
                    }
                    this.setVisible(false);
                } else {
                    //System.err.println("❌ Mot de passe incorrect : Saisi [" + motDePasseSaisi + "] vs Déchiffré [" + decryptedPassword + "]");
                    JOptionPane.showMessageDialog(this, "Mot de passe incorrect.", "Erreur", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Aucun utilisateur trouvé avec cet email.", "Erreur", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erreur de connexion : " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }


    private void demanderConnexionLocale() {
    // Récupération des valeurs des champs de connexion existants
        String username = jTxtUsername.getText().trim();
        String password = new String(jPasswordFieldMDP.getPassword()).trim();

        // Vérification des informations de connexion
        if (DEFAULT_USERNAME.equals(username) && DEFAULT_PASSWORD.equals(password)) {
            JOptionPane.showMessageDialog(this, "Connexion réussie aux paramètres.");
            new PageConfig(this, true).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Identifiants incorrects.", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }


    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(() -> {
            new PageConnexion().setVisible(true);
        });
    
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PageConnexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PageConnexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PageConnexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PageConnexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new PageConnexion().setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnLogin;
    private javax.swing.JCheckBox jCheckBoxRemerber;
    private javax.swing.JLabel jLabConnexion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelImageConnexion;
    private javax.swing.JLabel jLabelImgWelcome;
    private javax.swing.JLabel jLabelfpw;
    private javax.swing.JPasswordField jPasswordFieldMDP;
    private javax.swing.JTextField jTxtUsername;
    private java.awt.Panel panelFenetreConnexion;
    // End of variables declaration//GEN-END:variables
}
